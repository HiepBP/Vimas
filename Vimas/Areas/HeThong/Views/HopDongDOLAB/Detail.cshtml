@model HopDongDOLABViewModel

@{
    Layout = null;
}

<style>
    .select2 {
        width: 100% !important;
    }
    #selectedTTCNTable {
        min-width: 250px !important;
        max-width: 500px !important;
    }
</style>

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <form id="HopDongDOLABForm" method="post">
            @Html.AntiForgeryToken()
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Thông tin hợp đồng Dolab</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(q => q.NgayDangKy, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            <div class="fg-line" id="NgayDangKy">
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.NgayNhan, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            <div class="fg-line" id="NgayNhan">
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.SoDKHopDong, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            @Html.DisplayTextFor(q => q.SoDKHopDong)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.SoCongVan, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            @Html.DisplayTextFor(q => q.SoCongVan)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.SoPhieuTiepNhan, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            @Html.DisplayTextFor(q => q.SoPhieuTiepNhan)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-10 col-sm-offset-1" >
                <br />
                <table id="selectedTTCNTable" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Họ tên</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        moment.locale('vi');
        @if (this.Model.NgayDangKy.HasValue)
        {
            <text>$('#NgayDangKy').append(moment('@this.Model.NgayDangKy.GetValueOrDefault().ToShortDateString()', 'DD/MM/YYYY').format('LL'));</text>
        }
        @if (this.Model.NgayNhan.HasValue)
        {
            <text>$('#NgayNhan').append(moment('@this.Model.NgayNhan.GetValueOrDefault().ToShortDateString()', 'DD/MM/YYYY').format('LL'));</text>
        }

        selectedTTCNTable();
    });

    function selectedTTCNTable(){
        console.log('Initialize datatable')
        $('#selectedTTCNTable').dataTable({
            "dom": '',
            "bSort": false,
            "bRetrieve": true,
            "bServerSide": true,
            "bScrollCollapse": true,
            "responsive": true,
            "oLanguage": {
                "sSearch": "Số đăng kí:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "oPaginate": {
                    "sNext": "<i class='fa fa-chevron-right'></i>",
                    "sPrevious": "<i class='fa fa-chevron-left'></i>"
                }
            },
            "sAjaxSource": "@Url.Action("GetByIdDOLAB","ThongTinCaNhan", new { area = "HocVien" })",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "idDOLAB", "value": @this.Model.Id });
            },
            "aoColumnDefs": [
               {
                   "aTargets": [0],
                   "sClass": "text-center"
               },
            ],
            "columns": [
                { "data": "No", "bSortable": false },
                { "data": "HoTen", "bSortable": false },
            ],
        });
    }
</script>