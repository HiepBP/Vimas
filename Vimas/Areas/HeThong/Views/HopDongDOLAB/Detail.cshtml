@model HopDongDOLABViewModel

@{
    Layout = null;
}

<style>
    .select2 {
        width: 100% !important;
    }
</style>

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <form id="HopDongDOLABForm" method="post">
            @Html.AntiForgeryToken()
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Thông tin hợp đồng Dolab</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(q => q.NgayDangKy, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            <div class="fg-line">
                                @Html.DisplayTextFor(q => q.NgayDangKy)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.NgayNhan, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            <div class="fg-line form-control">
                                @Html.DisplayTextFor(q => q.NgayNhan)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.SoDKHopDong, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            @Html.DisplayTextFor(q => q.SoDKHopDong)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.SoCongVan, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            @Html.DisplayTextFor(q => q.SoCongVan)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(q => q.SoPhieuTiepNhan, new { @class = "control-label col-md-4" })
                        <div class="col-md-5">
                            @Html.DisplayTextFor(q => q.SoPhieuTiepNhan)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-10 col-sm-offset-1">
                <br />
                <table id="selectedTTCNTable" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Họ tên</th>
                            <th>Tùy chọn</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        var form = $('#HopDongDOLABForm')
            .removeData("validator") /* added by the raw jquery.validate plugin */
            .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin */

        $.validator.unobtrusive.parse(form);


        initializeDateRangePicker();
        initializeDDL();
    });

    function createDOLAB() {
        //var formData = $('#createProductItemForm').serialize();
        var formData = new FormData($('#HopDongDOLABForm')[0]);
        for (var i = 0; i < ttcnList.length; i++)
            formData.append("SelectedThongTinCaNhan[]", ttcnList[i])
        $.ajax({
            url: "@this.Url.Action("Create","HopDongDOLAB")",
            type: "POST",
            data: formData,
            processData: false,
            contentType: false,
            success: function (result) {
                swal("Thêm mới", result.message, "success");
                $('#createDOLABPanel').modal('hide');
                $('#createDOLABPanel').html("");
                RefreshTable('DOLABDatatable');
            },
            error: function (error) {
                swal('Lỗi', error.message, 'error');
            }
        });
    };

    function initializeDateRangePicker() {
        moment.locale('vi');
        var now = moment().format("LL");
        $('input[name="NgayDangKy"]').val(moment().format("L"))
        $('#NgayDangKy').val(now);
        $('#NgayDangKy').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            autoUpdateInput: false,
            minDate: moment().add(-50, 'y'),
            maxDate: moment().add(10, 'y'),
            locale: {
                format: "LL",
                daysOfWeek: [
                    "Chủ Nhật",
                    "Thứ 2",
                    "Thứ 3",
                    "Thứ 4",
                    "Thứ 5",
                    "Thứ 6",
                    "Thứ 7"
                ],
                monthNames: [
                    "Tháng 1",
                    "Tháng 2",
                    "Tháng 3",
                    "Tháng 4",
                    "Tháng 5",
                    "Tháng 6",
                    "Tháng 7",
                    "Tháng 8",
                    "Tháng 9",
                    "Tháng 10",
                    "Tháng 11",
                    "Tháng 12"
                ],
                firstDay: 1,
            }
        },
        function (start, end, label) {
            $('#NgayDangKy').val(start.format('LL'));
            $('input[name="NgayDangKy"]').val(start.format("DD/MM/YYYY"));
        });

        $('input[name="NgayNhan"]').val(moment().format("L"))
        $('#NgayNhan').val(now);
        $('#NgayNhan').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            autoUpdateInput: false,
            minDate: moment().add(-50, 'y'),
            maxDate: moment().add(10, 'y'),
            locale: {
                format: "LL",
                daysOfWeek: [
                    "Chủ Nhật",
                    "Thứ 2",
                    "Thứ 3",
                    "Thứ 4",
                    "Thứ 5",
                    "Thứ 6",
                    "Thứ 7"
                ],
                monthNames: [
                    "Tháng 1",
                    "Tháng 2",
                    "Tháng 3",
                    "Tháng 4",
                    "Tháng 5",
                    "Tháng 6",
                    "Tháng 7",
                    "Tháng 8",
                    "Tháng 9",
                    "Tháng 10",
                    "Tháng 11",
                    "Tháng 12"
                ],
                firstDay: 1,
            }
        },
        function (start, end, label) {
            $('#NgayNhan').val(start.format('LL'));
            $('input[name="NgayNhan"]').val(start.format("DD/MM/YYYY"));
        });
    };

    function initializeDDL() {
        var pageSize = 20;
        var optionListUrl = '@Url.Action("LoadThongTinCaNhanDDL","ThongTinCaNhan", new { area = "HocVien"})';
        $('#thongTinCaNhanDDL').select2(
            {
                ajax: {
                    delay: 150,
                    url: optionListUrl,
                    dataType: 'json',
                    delay: 500,
                    data: function (params) {
                        params.page = params.page || 1;
                        return {
                            searchTerm: params.term,
                            pageSize: pageSize,
                            pageNumber: params.page
                        };
                    },
                    processResults: function (data, params) {
                        params.page = params.page || 1;
                        return {
                            results: data.Results,
                            pagination: {
                                more: (params.page * pageSize) < data.Total
                            }
                        };
                    }
                },
                placeholder: "-- Lựa chọn --",
                minimumInputLength: 0,
                allowClear: true,
            });
    }

    var ttcnList = [];
    var count = 1;

    $('#addTTCN').on('click', function () {
        var option = $('#thongTinCaNhanDDL option:selected');
        for (var i = 0; i < ttcnList.length; i++) {
            if (ttcnList[i] == option[0].value) {
                //ShowMessage("Đã tồn tại nhà cung cấp này!", 1);
                return;
            }
        }
        var table = document.getElementById("selectedTTCNTable");
        var row = table.insertRow(count);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        cell1.innerHTML = count;
        cell2.innerHTML = option[0].text;
        cell3.innerHTML = $("<button>", {
            //'type': 'button',
            'id': option[0].value,
            'class': 'btn btn-danger btn-md glyphicon glyphicon-minus',
            'onclick': 'removeTTCNLine(this,' + option[0].value + ')',
        })[0].outerHTML;
        ttcnList.push(option[0].value);
        count++;
    });

    function removeTTCNLine($btn, ttcnId) {
        $($btn).closest('tr').remove();
        count--;
        for (var i = 0; i < ttcnList.length; i++) {
            if (ttcnList[i] == ttcnId) {
                ttcnList.splice(i, 1);
            }
        }
        var table = document.getElementById("selectedTTCNTable");
        var countCurrentRow = 0;
        for (var i = 1; i < table.rows.length; i++) {
            table.rows[i].cells[0].innerHTML = ++countCurrentRow;
        }
    }
</script>